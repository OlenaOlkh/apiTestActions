name: Run Warrior gRPC

on:
  workflow_dispatch:

jobs:
  run-grpc:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Install grpcurl
      - name: Install grpcurl
        run: |
          sudo apt update
          sudo apt install -y curl wget tar
          GRPCURL_VERSION="1.9.3"
          URL="https://github.com/fullstorydev/grpcurl/releases/download/v${GRPCURL_VERSION}/grpcurl_${GRPCURL_VERSION}_linux_x86_64.tar.gz"
          echo "Downloading grpcurl version ${GRPCURL_VERSION}..."
          wget -O grpcurl.tar.gz "$URL"
          tar -xvzf grpcurl.tar.gz
          sudo mv grpcurl /usr/local/bin/
          sudo chmod +x /usr/local/bin/grpcurl
          grpcurl -version
      # Step 3: Create warrior.proto if not exists
      - name: Create warrior.proto
        run: |
          cat <<EOT > warrior.proto
          syntax = "proto3";
          package warrior;
          import "google/protobuf/empty.proto";
          message WarriorDescription {
              string name = 1;
              string damageRange = 2;
              int32 armor = 3;
              int32 health = 4;
              string description = 5;
          }
          service WarriorServer {
              rpc getBarbarian(google.protobuf.Empty) returns (WarriorDescription);
              rpc getAssassin(google.protobuf.Empty) returns (WarriorDescription);
              rpc getEnchantress(google.protobuf.Empty) returns (WarriorDescription);
              rpc getWerewolf(google.protobuf.Empty) returns (WarriorDescription);
          }
          EOT
      # Step 4: Call Warrior gRPC methods
      - name: Call all Warrior methods
        run: |
          mkdir -p warrior_responses
          for method in getBarbarian getAssassin getEnchantress getWerewolf
          do
            grpcurl -plaintext -proto warrior.proto -d '{}' grpc-hillel-warriors.hillel.it:50051 warrior.WarriorServer/$method > warrior_responses/$method.json
          done
      # Step 5: Upload responses as artifacts
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: warrior-responses
          path: warrior_responses/
